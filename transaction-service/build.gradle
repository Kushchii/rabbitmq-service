repositories {
    mavenCentral() // Ensure Maven Central is included to resolve dependencies
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.mapstruct:mapstruct:${mapStructVersion}"

    //spring boot starters
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly "org.postgresql:postgresql:${postgresqlVersion}"
    implementation "org.postgresql:r2dbc-postgresql:${r2dbcPostgresVersion}"

    //liquibase
    implementation "org.liquibase:liquibase-core:${liquibaseVersion}"
    implementation 'org.springframework:spring-jdbc'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test:3.6.10'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testImplementation 'org.instancio:instancio-junit:5.0.2'
    testImplementation 'org.wiremock:wiremock-standalone:3.3.1'
    testImplementation 'org.testcontainers:postgresql:1.19.7'

    implementation "org.codehaus.janino:janino:${janinoVersion}"
}

bootJar {
    layered {
        enabled = true
    }
}

test {
    useJUnitPlatform()
}